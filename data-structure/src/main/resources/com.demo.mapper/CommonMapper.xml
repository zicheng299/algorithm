<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.CommonMapper">
    <!--    查询第二名 关键字 limit 1,1-->
    <select id="selectSecondSalary" resultType="java.math.BigDecimal">
        SELECT
            ifnull((SELECT DISTINCT salary FROM employee ORDER BY salary DESC LIMIT 1,1) , NULL ) AS secondSalary
    </select>
    <!--    查询排名 使用变量@XXX 赋值操作 := -->
    <select id="selectRank" resultType="java.lang.Integer">
        SELECT s.id,
               s.score,
               IF(s.score = @score, @rank := @rank, @rank := @rank + 1) as 'rank',
               @score := s.score
        FROM
            scores s,
--             设置两个变量，:= 赋值
            (SELECT @score := null, @rank := 0) r
        ORDER BY s.score DESC
    </select>
    <!--    查询【连续】出现超过三次的数字-->
    <select id="selectContinuousNum" resultType="java.lang.Integer">
        SELECT DISTINCT t.num
        FROM (SELECT l.num,
                     IF(l.num = @num, @count := @count + 1, @count := 1) AS count,
		             @num := l.num
              FROM LOGS l, ( SELECT @num := NULL, @count := 0 ) c) t
        WHERE t.count >= 3
    </select>
<!--    查询每个部门薪资最高的人-->
    <select id="selectMaxSalary" resultType="java.lang.String">
        select t2.name as Department,
               t1.name as Employee,
               t1.salary
        from employee t1
        inner join department t2 on t1.departmentId = t2.id
        where (t1.departmentId, t1.salary) in
              (select departmentId,
                      max(salary)
               from employee
               group by departmentId)
    </select>
<!--    查询部门薪资前三的员工
难点：排名前三等于部门中薪资大于他的人不超过3个（注意薪资去重）
-->
    <select id="selectThirdSalary" resultType="java.lang.String">
        select
        t2.name as Department,
        t1.name as Employee,
        t1.salary
        from
        employee t1,
        department t2
        where t1.department_id = t2.id
        and t1.id in(
        select
        e1.id
        from
        employee e1
        left join employee e2 on e1.department_id = e2.department_id and e2.salary > e1.salary
        group by e1.id
        having count(distinct e2.salary) &lt; 3
        )

    </select>
</mapper>
